services:
  agent:
    build:
      context: ./agent
      dockerfile: ./Dockerfile
    ports:
      - "8081:8080"
    environment:
      - CHATBOT_BACKEND_URL=${CHATBOT_BACKEND_URL}
      - CHATBOT_API_KEY=${CHATBOT_API_KEY}
      - SPRING_PROFILES_ACTIVE=prod
    networks:
      - app_network

  backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - SPRING_PROFILES_ACTIVE=prod
    ports:
      - "8082:8080"
    networks:
      - app_network
    depends_on:
      - database

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - VITE_API_URL=${VITE_API_URL}
      - VITE_WS_URL=${VITE_WS_URL}
      - VITE_WS_TOPIC=${VITE_WS_TOPIC}
      - VITE_WS_SEND=${VITE_WS_SEND}
      - VITE_LOCAL_STORAGE_KEY=${VITE_LOCAL_STORAGE_KEY}
    ports:
      - "3000:80"
    networks:
      - app_network
    depends_on:
      - agent
      - backend

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - agent
      - backend
    networks:
      - app_network

  database:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_network

volumes:
  mysql_data:

networks:
  app_network:
    driver: bridge
